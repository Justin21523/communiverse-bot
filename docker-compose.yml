# ============================================================================
# Elioverse Bot - Docker Compose Configuration
# Services: Discord Bot + Python AI Service + MongoDB
# GPU Support: NVIDIA RTX 5080 with CUDA 12.8
# ============================================================================

version: "3.9"

services:
  # -------------------------
  # MongoDB Database Service
  # -------------------------
  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: devpass
    volumes:
      - mongo_data:/data/db
    command: ["--auth"]
    networks:
      - elioverse-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # -------------------------
  # Python AI Service (GPU-enabled)
  # -------------------------
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9091:9091"
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - ./ai-service/.env
    environment:
      # MongoDB connection
      MONGODB_URI: mongodb://dev:devpass@mongo:27017/?authSource=admin
      MONGODB_DB: ${DB_NAME:-communiverse_bot}

      # GPU configuration
      CUDA_VISIBLE_DEVICES: 0
      PYTORCH_CUDA_ALLOC_CONF: max_split_size_mb:512
      TORCH_DTYPE: float16

      # Service configuration
      HOST: 0.0.0.0
      PORT: 8000
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      # Mount shared AI warehouse (host path -> container path)
      - /mnt/c/AI_LLM_projects/ai_warehouse:/mnt/ai_warehouse

      # Optional: Mount logs directory
      - ./ai-service/logs:/app/logs
    networks:
      - elioverse-network
    # GPU access (requires NVIDIA Container Toolkit)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # -------------------------
  # Discord Bot Service
  # -------------------------
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # MongoDB connection
      MONGODB_URI: mongodb://dev:devpass@mongo:27017/?authSource=admin
      DB_NAME: ${DB_NAME:-communiverse_bot}

      # AI Service connection
      AI_SERVICE_URL: http://ai-service:8000
      AI_ENABLED: true

      # Bot configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      # Optional: Mount logs directory
      - ./logs:/app/logs
    networks:
      - elioverse-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('net').connect(443,'discord.com').on('connect',()=>{console.log('ok');process.exit(0)}).on('error',()=>process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

# -------------------------
# Networks
# -------------------------
networks:
  elioverse-network:
    driver: bridge

# -------------------------
# Volumes
# -------------------------
volumes:
  mongo_data:
    driver: local
